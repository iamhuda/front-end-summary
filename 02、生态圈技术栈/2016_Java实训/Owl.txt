#2016-07-18

面向对象(C++，java，C#)
	面向过程：C
	OOP  Object Oriented Programming（面向对象编程）
    
	类  对象之间关系
	对象：是基于类（模板）创建出来的一个实例。
    
	万物皆对象
	类：根据所有相似的对象，抽象出共有的属性和行为，构成一个模板。
	Person name  sex age  address tel     吃饭  睡觉  逛街
	new:创建对象的关键字
        【面向对象的本质：以类的方法组织代码，以对象的方法组织数据】
	(不考虑static)属性：对象属性 , 只有通过对象才能调用
	(不考虑static)对象方法   只有通过对象才能调用
	alt + /:代码提示
	ctrl + shift + o : 快速导包  删包
	类和对象
	OOP：面向对象
	OOA(analysis) -> OOD(设计) -> OOP

	Object:所有类的父类，最大的类
	
	#对象方法如何调用，方法之间如何调用
	对象方法之间的调用  直接调用方法名
	对象的方法或者属性，通过对象才能调用
    	
        对象类型：默认值为null,内存中没有对象空间。
	null: 空对象 即内存里没有对象空间

	类的属性可以是基本类型或者是引用类型或者自定义类型(数据类型：1：基本  2：引用（对象类型）)
    
	对象必须要先创建以后才能调用里面的属性和方法，否则，如果对象为null的话，调用属性或者方法会出现异常。
	
    
#2016-07-19

方法讲解
	1：参数传递：如果把b传入参数，相当于把b的引用给a , 仅限于对象类型（引用类型）
	2：因为基本类型不是对象,没有引用。
	3：Java的方法传递：都是值传递（1：基本数据类型：传递的是数字（拷贝副本，改变分身不影响真身）  2：引用类型：传递的是内存地址）
	   自定义类型属于引用类型。
	4：对象的方法，只能通过对象调用
	5：构造方法：比较特殊
		5.1:构造方法在创建对象时候被调用 , 有一个默认的类型 , 无参的无输出的类型
		5.1.1：方法名必须和类名一样
		5.1.2：没有返回值
		5.1.3：如果有一个自定义类型的构造方法，会把默认的给覆盖
	6：静态方法：
		6.1:关键字为static，可以修饰属性或者方法。
		6.2:可以不通过对象调用，通过类可以直接调用 , 对象也可以调用
		6.3:静态方法不能调用对象的方法 , 对象方法可以调用静态方法
		6.4:静态属性又叫全局属性（给所有对象共享)
		6.5:静态代码块  其中静态代码块是优于构造方法调用的。一般需要做一些耗时的操作可以放这里。比如：jdbc、加载数据库资源可以放这里。


	

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
